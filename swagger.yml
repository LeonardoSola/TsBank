swagger: "2.0"
info:
  title: "TsBank API"
  description: "API para controle de contas bancárias"
  version: "1.0.0"
host: "localhost:8080"
basePath: "/api"
schemes:
  - "http"
tags:
  - name: "Auth"
    description: "Autenticação"
  - name: "User"
    description: "Usuários"
  - name: "Transaction"
    description: "Transações"
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: >-
      Enter the token with the `Bearer: ` prefix, e.g. "Bearer abcde12345".
paths:
  /auth/login:
    post:
      tags:
        - "Auth"
      summary: "Login"
      description: "Gera um token de acesso"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: "Dados de login"
          required: true
          schema:
            $ref: "#/definitions/Login"
      responses:
        200:
          description: "Token de acesso"
          schema:
            $ref: "#/definitions/Token"
        400:
          description: "Dados inválidos"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Usuário não encontrado"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Erro interno"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user:
    get:
        tags:
          - "User"
        summary: "Infos"
        description: "Retorna informações do usuário logado"
        produces:
          - "application/json"
        responses:
          200:
            description: "Usuários"
            schema:
              $ref: "#/definitions/User"
          500:
            description: "Erro interno"
            schema:
              $ref: "#/definitions/ErrorResponse"
        security:
          - Bearer: []            
    post:
      tags:
        - "User"
      summary: "Register"
      description: "Cria um novo usuário"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: "Dados do usuário"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        201:
          description: "Usuário criado"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Dados inválidos"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Erro interno"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
          - Bearer: []
  /user/deposit:
      put:
        tags:
          - "Transaction"
        summary: "Deposit"
        description: "Realiza um depósito"
        consumes:
          - "application/json"
        produces:
          - "application/json"
        parameters:
          - name: "body"
            in: "body"
            description: "Dados do depósito"
            required: true
            schema:
              $ref: "#/definitions/Deposit"
        responses:
          201:
            description: "Depósito realizado"
            schema:
              $ref: "#/definitions/DataStringResponse"
          400:
            description: "Dados inválidos"
            schema:
              $ref: "#/definitions/ErrorResponse"
          500:
            description: "Erro interno"
            schema:
              $ref: "#/definitions/ErrorResponse"
        security:
          - Bearer: []
  /transaction:
    get:
      tags:
        - "Transaction"
      summary: "Transactions"
      description: "Retorna as transações do usuário logado"
      produces:
        - "application/json"
      responses:
        200:
          description: "Transações"
          schema:
            $ref: "#/definitions/Transactions"
        500:
          description: "Erro interno"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
          - Bearer: []
    post:
      tags:
        - "Transaction"
      summary: "Transfer"
      description: "Realiza uma transferência"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: "Dados da transferência"
          required: true
          schema:
            $ref: "#/definitions/Transaction"
      responses:
        201:
          description: "Transferência realizada"
          schema:
            $ref: "#/definitions/Transaction"
        400:
          description: "Dados inválidos"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Erro interno"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
          - Bearer: []
  /transaction/{id}:
    get:
      tags:
        - "Transaction"
      summary: "Transaction"
      description: "Retorna uma transação específica"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID da transação"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "Transação"
          schema:
            $ref: "#/definitions/Transaction"
        404:
          description: "Transação não encontrada"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Erro interno"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
          - Bearer: []
definitions:
  Login:
    type: "object"
    required:
      - "email"
      - "password"
    properties:
      email:
        type: "string"
        format: "email"
      password:
        type: "string"
        format: "password"
  Token:
    type: "object"
    properties:
      data:
        type: "string"
        format: "jwt"
  User:
    type: "object"
    properties:
      name:
        type: "string"
      email:
        type: "string"
        format: "email"
      cpf_cnpj:
        type: "string"
      balance:
        type: "number"
        format: "number"
      type:
        type: "string"
        enum:
          - "pf"
          - "pj"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"
      password:
        type: "string"
        format: "password"
  Deposit:
    type: "object"
    required:
      - "value"
    properties:
      value:
        type: "number"
        format: "number"
  Transaction:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      origin_id:
        type: "integer"
        format: "int64"
      destination_id:
        type: "integer"
        format: "int64"
      value:
        type: "number"
        format: "number"
      authorized:
        type: "boolean"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"
  Transactions:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/Transaction"
  DataStringResponse:
    type: "object"
    properties:
      data:
        type: "string"
  ErrorResponse:
    type: "object"
    properties:
      error:
        type: "string"